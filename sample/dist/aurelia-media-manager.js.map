{"version":3,"sources":["/src/index.ts","/src/services/config-service.ts","/src/lib/utils.ts","/src/lib/file-upload.ts","/src/resources/elements/drag-and-drop.ts","/src/resources/index.ts","/src/resources/value-converters/get-value.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import { PLATFORM } from 'aurelia-pal'\nimport { FrameworkConfiguration } from 'aurelia-framework'\nimport { ConfigService } from './services/config-service'\nimport {noop} from './lib/utils'\n\nexport function configure (config: FrameworkConfiguration, options: any): void {\n  const defaultOptions = {\n    fileTypes: [\n      'image/*',\n      'video/*'\n    ],\n    multiple: true,\n    abort: noop\n  }\n  config.container.get(ConfigService).config = Object.assign({}, defaultOptions, options || {})\n  config.globalResources([\n    './resources/elements/drag-and-drop'\n  ])\n}\n","export class ConfigService {\n  private _config: any\n\n  constructor (config: any) {\n    this._config = config\n  }\n\n  set config (config) {\n    this._config = Object.assign({}, this._config, config)\n  }\n\n  get config () {\n    return this._config\n  }\n}\n","const noop = () => {/* noop */}\n\nexport {\n  noop\n}\n","const uploadFiles = (files: Array<File>, handlers: any): Array<XMLHttpRequest> => {\n  return files.map((file, index) => {\n    const xhr = new XMLHttpRequest()\n\n    xhr.upload.addEventListener('progress', (event: Event) => {\n      handlers.progress(event, index)\n    }, false)\n\n    xhr.upload.addEventListener('load', (event: Event) => {\n      handlers.load(event, index)\n    }, false)\n\n    xhr.upload.addEventListener('abort', (event: Event) => {\n      handlers.abort(event, index)\n    }, false)\n\n    xhr.open('POST', 'http://localhost:3000/upload', true)\n    const formData = new FormData()\n    formData.append(`file${index}`, file)\n    xhr.send(formData)\n    return xhr\n  })\n}\n\nexport {\n  uploadFiles\n}\n","import { ConfigService } from '../../services/config-service';\nimport { autoinject, bindable } from 'aurelia-framework'\nimport {uploadFiles} from '../../lib/file-upload'\n\n@autoinject\nexport class DragAndDrop {\n  @bindable private fileTypes: Array<string>\n  @bindable private abort: Function\n  @bindable private multiple: boolean\n  private id: string\n  private uploads: Array<any> = []\n\n  constructor(private configService: ConfigService) {\n    this.id = `aurelia-media-manager-${Date.now()}`\n    const defaultConfig = this.configService.config\n    this.fileTypes = this.fileTypes || defaultConfig.fileTypes\n    this.abort = this.abort || defaultConfig.abort\n    this.multiple = typeof this.multiple === 'undefined' ? defaultConfig.multiple : this.multiple\n  }\n\n  handleInputChange = (event: Event) => {\n    const input = <HTMLInputElement>event.target\n    this.uploadFiles(input.files)\n  }\n\n  handleDrop = (event: DragEvent) => {\n    const files = Array.from(\n        this.multiple ? event.dataTransfer.files : [event.dataTransfer.files[0]]\n      )\n      .filter(file => this.fileTypes.includes(file.type) ||\n        this.fileTypes.includes(`${file.type.split('/')[0]}/*`)\n      )\n    event.dataTransfer.clearData()\n    this.uploadFiles(files)\n  }\n\n  handleUploadProgress = (event: any, fileIndex: number) => {\n    if (event.lengthComputable) {\n      const percentage = Math.round((event.loaded * 100) / event.total)\n      this.updateUploadProgress(fileIndex, percentage)\n    }\n  }\n\n  handleLoadComplete = (event: Event, fileIndex: number) => {\n    this.updateUploadProgress(fileIndex, 100)\n    this.uploads[fileIndex].xhr = null\n  }\n\n  handleAbort = (event: Event, fileIndex: number) => {\n    this.uploads[fileIndex].cancelled = true\n    this.abort(this.uploads[fileIndex])\n  }\n\n  abortUpload (fileIndex: number) {\n    this.uploads[fileIndex].xhr.abort()\n  }\n\n  private updateUploadProgress(index: number, percentage: number) {\n    const upload = this.uploads[index]\n    upload.progress = percentage\n    this.uploads.splice(index, 1, upload)\n  }\n\n  private uploadFiles (files: Array<File> | FileList) {\n    this.uploads = []\n    const filesToUpload = Array.isArray(files) ? files : Array.from(files)\n    filesToUpload.forEach(file => {\n      this.uploads.push({\n        file,\n        progress: 0\n      })\n    })\n    const xhrs = uploadFiles(filesToUpload, {\n      'progress': this.handleUploadProgress,\n      'load': this.handleLoadComplete,\n      'abort': this.handleAbort\n    })\n    this.uploads = xhrs.map((xhr, index) => {\n      this.uploads[index].xhr = xhr\n      return this.uploads[index]\n    })\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  // config.globalResources([]);\n}\n","export class GetValueValueConverter {\n  toView (value: any, index: number | string) {\n    return value[index]\n  }\n}\n"]}